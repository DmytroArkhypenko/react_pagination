{"version":3,"sources":["components/Text/Text.js","components/Pagination/Pagination.js","App.js","index.js"],"names":["Text","total","perPage","curPage","start","end","length","className","map","item","index","Pagination","onPageChange","buttons","Math","ceil","changePage","event","newPage","target","textContent","type","onClick","Array","fill","button","App","state","setState","onPerPageChange","value","this","onChange","key","selected","React","Component","ReactDOM","render","document","getElementById"],"mappings":"2RA4BeA,G,YAvBF,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QACxBC,EAAQF,EAAUC,GAAWD,EAAU,GACvCG,EAAMH,EAAUC,GAAWF,EAAMK,OACnCL,EAAMK,OACNJ,EAAUC,EAEd,OACE,wBAAII,UAAU,QACXN,EAAMO,KAAI,SAACC,EAAMC,GAAP,OACTA,EAAQ,GAAKN,GAASM,EAAQ,GAAKL,EAC/B,4BAAKI,GACL,SC2CGE,G,MAtDI,SAAC,GAA+C,IAA7CV,EAA4C,EAA5CA,MAAOE,EAAqC,EAArCA,QAASD,EAA4B,EAA5BA,QAASU,EAAmB,EAAnBA,aACvCC,EAAUC,KAAKC,KAAKd,EAAQC,GAE5Bc,EAAa,SAACC,GAClB,IAAMC,EAAUD,EAAME,OAAOC,YAE7B,OAAQF,GACN,IAAK,OACHN,EAAaT,EAAU,EAAIU,EAAUA,EAAUV,EAAU,GACzD,MACF,IAAK,OACHS,EAAaT,EAAU,EAAI,EAAI,EAAIA,EAAU,GAC7C,MACF,QACES,GAAcM,KAIpB,OACE,6BACE,4BACEX,UAAU,UACVc,KAAK,SACLC,QAASN,GAHX,QAOCO,MAAMV,GAASW,KAAK,IAAIhB,KAAI,SAACiB,EAAQf,GAAT,OAC3B,4BACEW,KAAK,SACLd,UAAU,UACVe,QAASN,GAERN,EAAQ,MAGb,4BACEW,KAAK,SACLC,QAASN,EACTT,UAAU,WAHZ,WCgCSmB,E,4MAnEbC,MAAQ,CACNxB,QAAS,EACTD,QAAS,EACTD,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAChE,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAChE,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAChE,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAChE,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAChE,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,M,EAG5DW,aAAe,SAAAT,GAAO,OACpB,EAAKyB,SAAS,CAAEzB,a,EAGlB0B,gBAAkB,SAAAZ,GAAK,OACrB,EAAKW,SAAS,CACZzB,QAAS,EACTD,QAASe,EAAME,OAAOW,S,uDAIhB,IAAD,EAKHC,KAAKJ,MAHPxB,EAFK,EAELA,QACAD,EAHK,EAGLA,QACAD,EAJK,EAILA,MAKF,OACE,yBAAKM,UAAU,OAEb,kBAAC,EAAD,CACEN,MAAOA,EAAMK,OACbH,QAASA,EACTD,QAASA,EACTU,aAAcmB,KAAKnB,eAGrB,kBAAC,EAAD,CACEX,MAAOA,EACPC,QAASA,EACTC,QAASA,IAGX,4BACEI,UAAU,SACVyB,SAAUD,KAAKF,iBApBA,CAAC,EAAG,EAAG,GAAI,IAsBZrB,KAAI,SAAAC,GAAI,OACpB,4BACEqB,MAAOrB,EACPwB,IAAKxB,EACLyB,SAAUzB,IAASP,GAElBO,Y,GA1DG0B,IAAMC,WCDxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.6dc7cacc.chunk.js","sourcesContent":["import React from 'react';\nimport PropsTypes from 'prop-types';\n\nimport './Text.css';\n\nconst Text = ({ total, perPage, curPage }) => {\n  const start = perPage * curPage - (perPage - 1);\n  const end = perPage * curPage >= total.length\n    ? total.length\n    : perPage * curPage;\n\n  return (\n    <ul className=\"list\">\n      {total.map((item, index) => (\n        index + 1 >= start && index + 1 <= end\n          ? <li>{item}</li>\n          : ''\n      ))}\n    </ul>\n  );\n};\n\nText.propTypes = {\n  total: PropsTypes.arrayOf.isRequired,\n  curPage: PropsTypes.number.isRequired,\n  perPage: PropsTypes.number.isRequired,\n};\n\nexport default Text;\n","import React from 'react';\nimport PropsTypes from 'prop-types';\n\nimport './Pagination.css';\n\nconst Pagination = ({ total, curPage, perPage, onPageChange }) => {\n  const buttons = Math.ceil(total / perPage);\n\n  const changePage = (event) => {\n    const newPage = event.target.textContent;\n\n    switch (newPage) {\n      case 'Next':\n        onPageChange(curPage + 1 > buttons ? buttons : curPage + 1);\n        break;\n      case 'Prev':\n        onPageChange(curPage - 1 < 1 ? 1 : curPage - 1);\n        break;\n      default:\n        onPageChange(+newPage);\n    }\n  };\n\n  return (\n    <div>\n      <button\n        className=\"pag_btn\"\n        type=\"button\"\n        onClick={changePage}\n      >\n        Prev\n      </button>\n      {Array(buttons).fill('').map((button, index) => (\n        <button\n          type=\"button\"\n          className='pag_btn'\n          onClick={changePage}\n        >\n          {index + 1}\n        </button>\n      ))}\n      <button\n        type=\"button\"\n        onClick={changePage}\n        className=\"pag_btn\"\n      >\n        Next\n      </button>\n    </div>\n  );\n};\n\nPagination.propTypes = {\n  total: PropsTypes.number.isRequired,\n  curPage: PropsTypes.number.isRequired,\n  perPage: PropsTypes.number.isRequired,\n  onPageChange: PropsTypes.func.isRequired,\n};\n\nexport default Pagination;\n","import React from 'react';\nimport './App.css';\nimport Text from './components/Text/Text';\nimport Pagination from './components/Pagination/Pagination';\n\nclass App extends React.Component {\n  state = {\n    curPage: 1,\n    perPage: 5,\n    total: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,\n      18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,\n      35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51,\n      52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68,\n      69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85,\n      86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100],\n  };\n\n  onPageChange = curPage => (\n    this.setState({ curPage })\n  )\n\n  onPerPageChange = event => (\n    this.setState({\n      curPage: 1,\n      perPage: event.target.value,\n    })\n  )\n\n  render() {\n    const {\n      curPage,\n      perPage,\n      total,\n    } = this.state;\n\n    const itemsPerPage = [3, 5, 10, 20];\n\n    return (\n      <div className=\"app\">\n\n        <Pagination\n          total={total.length}\n          curPage={curPage}\n          perPage={perPage}\n          onPageChange={this.onPageChange}\n        />\n\n        <Text\n          total={total}\n          perPage={perPage}\n          curPage={curPage}\n        />\n\n        <select\n          className=\"select\"\n          onChange={this.onPerPageChange}\n        >\n          {itemsPerPage.map(item => (\n            <option\n              value={item}\n              key={item}\n              selected={item === perPage}\n            >\n              {item}\n            </option>\n          ))}\n        </select>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}